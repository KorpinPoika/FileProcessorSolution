
Результаты выполнения тестового задания:

Приложение реализовано с использованием .Net Core 2.
Модульность реализована на основе MEF.
Основное консольное приложение FileProcessor.dll, запускается, соответственно командой dotnet FileProcessor.dll
При запуске без параметров пишет на консоль список найденных модулей.
Собственно, модули загружаются из директории приложения, как сборки содержащие реализацию интерфейса IActionModule.
Каждый модуль идентифицируется ключевой строкой IActionModule.ActionTag и указывает набор требуемых аргументов IActionModule.Arguments (пары ключ-значение).
Команда dotnet FileProcessor.dll -h показывает возможный список параметров приложения: 
"-a" для указания ключевой строки вызываемого модуля и список всех возможных параметров от всех найденных модулей.
В составе приложения есть два модуля:
FileProcessor.WordsCounter.dll - подсчет статистики слов через словарь;
FileProcessor.WordsCounter.Akka.dll - просто пример альтернативного модуля. Именно пример, без всякой претензии на правильность и производительность. 

Для FileProcessor.WordsCounter.dll в проекте есть тесты FileProcessor.WordsCounter.UnitTests

Пример запуска:
dotnet FileProcessor.dll -a woc -i vm.txt -o stat.txt

Логирование посредством NLog ведется в подиректорию Logs в один файл и консоль.
